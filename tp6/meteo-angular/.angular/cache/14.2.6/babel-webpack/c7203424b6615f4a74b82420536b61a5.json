{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\n\nfunction MeteoComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.city.name.length, \" caract\\u00E8res \");\n  }\n}\n\nfunction MeteoComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" La saisie de la ville est obligatoire \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MeteoComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Doit contenit au moins 3 carat\\u00E8res. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MeteoComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, MeteoComponent_div_12_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, MeteoComponent_div_12_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors[\"minlength\"]);\n  }\n}\n\nfunction MeteoComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MeteoComponent_li_16_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const city_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.remove(city_r7));\n    });\n    i0.ɵɵtext(4, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const city_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/meteo/\", city_r7.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r7.name, \" \");\n  }\n}\n\nfunction MeteoComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Aucune ville de saisie!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let MeteoComponent = /*#__PURE__*/(() => {\n  class MeteoComponent {\n    constructor() {\n      this.city = {\n        name: '',\n        id: 0,\n        weather: null\n      };\n      this.cityList = [];\n    }\n\n    ngOnInit() {\n      if (localStorage['cityList'] !== undefined) {\n        this.cityList = JSON.parse(localStorage['cityList']);\n      } else {\n        this.cityList = [];\n      }\n    }\n\n    onSubmit() {\n      if (this.isCityExist(this.city.name) === false) {\n        const currentCity = {\n          name: this.city.name,\n          id: Date.now(),\n          weather: null\n        };\n        this.cityList.push(currentCity);\n        this.saveCityList();\n        console.log(this.city.name, 'ajouté à la dans la liste');\n      } else {\n        console.log(this.city.name, 'existe déjà dans la liste');\n      }\n    }\n\n    remove(_city) {\n      // on utilise 'filter' pour retourne une liste avec tous les items ayant un nom différent de _city.name\n      this.cityList = this.cityList.filter(item => item.name != _city.name);\n      this.saveCityList();\n    }\n\n    isCityExist(_cityName) {\n      // la méthode 'filter' retourne une liste contenant tous les items ayant un nom égale à _cityName\n      // doc. sur filter : https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/filter\n      if (this.cityList.filter(item => item.name.toUpperCase() == _cityName.toUpperCase()).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    saveCityList() {\n      localStorage['cityList'] = JSON.stringify(this.cityList);\n    }\n\n  }\n\n  MeteoComponent.ɵfac = function MeteoComponent_Factory(t) {\n    return new (t || MeteoComponent)();\n  };\n\n  MeteoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MeteoComponent,\n    selectors: [[\"app-meteo\"]],\n    decls: 30,\n    vars: 10,\n    consts: [[\"aria-label\", \"breadcrumb\"], [1, \"breadcrumb\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\", \"active\"], [3, \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"search\", \"placeholder\", \"Ville ...\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"input-group-btn\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-primary\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"text-muted\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"d-block\", \"w-100\", 3, \"routerLink\"], [\"title\", \"Supprimer de la liste\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", \"pull-right\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-primary\"]],\n    template: function MeteoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1)(2, \"li\", 2);\n        i0.ɵɵtext(3, \"\\uD83C\\uDFE0\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function MeteoComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function MeteoComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.city.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 7)(9, \"button\", 8);\n        i0.ɵɵtext(10, \"Go!\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(11, MeteoComponent_small_11_Template, 2, 1, \"small\", 9);\n        i0.ɵɵtemplate(12, MeteoComponent_div_12_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"h4\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ul\", 11);\n        i0.ɵɵtemplate(16, MeteoComponent_li_16_Template, 5, 2, \"li\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, MeteoComponent_div_17_Template, 2, 0, \"div\", 13);\n        i0.ɵɵelement(18, \"hr\");\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" Utilisation du filtrer \");\n        i0.ɵɵelementStart(21, \"strong\");\n        i0.ɵɵtext(22, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" pour afficher le contenu de la variable \");\n        i0.ɵɵelementStart(24, \"strong\");\n        i0.ɵɵtext(25, \"cityList\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"pre\");\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"hr\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.city.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.city.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r0.invalid && (_r0.dirty || _r0.touched) && _r0.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Liste des villes (\", ctx.cityList.length, \")\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cityList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cityList.length == 0);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(28, 8, ctx.cityList), \"\\n\");\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.RouterLinkWithHref, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.NgModel, i3.NgForm, i1.JsonPipe]\n  });\n  return MeteoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}